/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    
    id 'org.openrewrite.rewrite' version '5.14.0'
    //id("org.jetbrains.kotlin.jvm") version("1.5.10")
    
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    //jcenter()
    mavenLocal()
    mavenCentral() 
}

rewrite {
	//activeRecipe("org.openrewrite.java.format.AutoFormat")
	//activeRecipe("com.naga.changePackage")
	
	//activeRecipe("com.naga.sayHello")
	//activeRecipe("org.openrewrite.samples.AddLicenseHeader")
	
	activeRecipe("com.naga.findReplaceText")
	
	//activeRecipe("org.openrewrite.starter.NoGuavaListsNewArrayList")
	//activeRecipe("")
	
	//configFile = project.getRootProject().file("rewrite.yml")
    //failOnDryRunResults = false
}

dependencies {

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:27.0.1-jre'
    
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    //implementation project(':gradle-recipe')
    //rewrite("org.openrewrite.samples:gradle-recipe:1.0.0")
    //rewrite("org.openrewrite.recipe:rewrite-recipe-starter:0.1.0-SNAPSHOT")
    rewrite("org.openrewrite.samples:gradle-recipe:1.0.0")

    
    // rewrite-java dependencies only necessary for Java Recipe development
    implementation("org.openrewrite:rewrite-java:7.16.0")
    implementation("org.openrewrite:rewrite-java-11:7.16.0")
    
}

tasks.withType(JavaCompile) {        
    sourceCompatibility = JavaVersion.VERSION_1_8.toString()
    targetCompatibility = JavaVersion.VERSION_1_8.toString()
}


